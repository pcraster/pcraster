name: Development Linux

on:
    push:
    pull_request:

jobs:
    build_release:
        strategy:
            matrix:
                os: [ubuntu-24.04]
                qt5: ["ON", "OFF"]
                compiler:
                    - { cc: gcc-14  , cxx: g++-14    }
                    - { cc: clang-18, cxx: clang++-18}
            fail-fast: false

        runs-on: ${{ matrix.os }}

        name: ${{ matrix.os }};${{ matrix.compiler.cc }};qt5-${{ matrix.qt5 }};Release

        timeout-minutes: 60

        steps:

        - name: Checkout PCRaster
          uses: actions/checkout@v4

        - name: Configure system
          run: |
              sudo apt update
              sudo apt install ninja-build cmake gdal-bin libgdal-dev libboost-dev libboost-test-dev libncurses-dev libxerces-c-dev mesa-common-dev libglu1-mesa-dev python3 libpython3-dev python3-numpy pybind11-dev python3-qgis nanobind-dev
              # Only required for documentation:
              sudo apt install python3-sphinx doxygen python3-matplotlib graphviz

        - name: Configure system Qt5
          if: matrix.qt5 == 'ON'
          run: |
              sudo apt install qtbase5-dev libqt5charts5-dev libqt5opengl5-dev

        - name: Configure system Qt6
          if: matrix.qt5 == 'OFF'
          run: |
              sudo apt install qt6-base-dev libqt6charts6-dev libqt6opengl6-dev

        - name: Configure PCRaster
          shell: bash -l {0}
          run: |
              mkdir build
              cmake \
                  -S . \
                  -B build \
                  -G"Ninja Multi-Config" \
                  -D CMAKE_CONFIGURATION_TYPES="Release;Debug" \
                  -D CMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
                  -D CMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
                  -D PCRASTER_BUILD_TEST=ON \
                  -D PCRASTER_BUILD_DOCUMENTATION=ON \
                  -D PCRASTER_WITH_FLAGS_IPO=OFF \
                  -D PCRASTER_WITH_QT5=${{ matrix.qt5 }} \
                  -D CMAKE_INSTALL_PREFIX=package

        - name: Build release
          shell: bash -l {0}
          run: |
              cmake --build build --config Release --target all

        - name: Install PCRaster
          shell: bash -l {0}
          run: |
              cmake --install build --config Release

        - name: Create source package
          shell: bash -l {0}
          run: |
              cmake --build build --config Release --target package_source

        - name: Test release
          shell: bash -l {0}
          run: |
              ctest --test-dir build --output-on-failure --build-config Release


    build_debug:
        strategy:
            matrix:
                os: [ubuntu-24.04]
                qt5: ["OFF"]
                compiler:
                    - { cc: gcc-14  , cxx: g++-14    }
                    - { cc: clang-18, cxx: clang++-18}
            fail-fast: false

        runs-on: ${{ matrix.os }}

        name: ${{ matrix.os }};${{ matrix.compiler.cc }};qt5-${{ matrix.qt5 }};Debug

        timeout-minutes: 60

        steps:

        - name: Checkout PCRaster
          uses: actions/checkout@v4

        - name: Configure system
          run: |
              sudo apt update
              sudo apt install ninja-build cmake gdal-bin libgdal-dev libboost-dev libboost-test-dev libncurses-dev libxerces-c-dev mesa-common-dev libglu1-mesa-dev python3 libpython3-dev python3-numpy pybind11-dev python3-qgis nanobind-dev

        - name: Configure system Qt5
          if: matrix.qt5 == 'ON'
          run: |
              sudo apt install qtbase5-dev libqt5charts5-dev libqt5opengl5-dev

        - name: Configure system Qt6
          if: matrix.qt5 == 'OFF'
          run: |
              sudo apt install qt6-base-dev libqt6charts6-dev libqt6opengl6-dev

        - name: Configure PCRaster
          shell: bash -l {0}
          run: |
              mkdir build
              cmake \
                  -S . \
                  -B build \
                  -G"Ninja Multi-Config" \
                  -D CMAKE_CONFIGURATION_TYPES="Release;Debug" \
                  -D CMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
                  -D CMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
                  -D PCRASTER_BUILD_TEST=ON \
                  -D PCRASTER_BUILD_DOCUMENTATION=OFF \
                  -D PCRASTER_WITH_FLAGS_IPO=OFF \
                  -D PCRASTER_WITH_QT5=${{ matrix.qt5 }} \
                  -D CMAKE_INSTALL_PREFIX=package

        - name: Build debug
          shell: bash -l {0}
          run: |
              cmake --build build --config Debug --target all

        - name: Test debug
          shell: bash -l {0}
          run: |
              ctest --test-dir build --output-on-failure --build-config Debug
