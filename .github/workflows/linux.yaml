name: Linux CI

on:
    push:
    pull_request:
    schedule:
      - cron:  '34 2 1 * *'

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-22.04]
                compiler:
                    - {version: 14, cc: gcc-14  , cxx: g++-14    }
                    - {version: 18, cc: clang-18, cxx: clang++-18}
            fail-fast: false

        runs-on: ${{ matrix.os }}

        name: ${{ matrix.os }} / ${{ matrix.compiler.cxx }}

        timeout-minutes: 120

        steps:

        - name: Checkout PCRaster
          uses: actions/checkout@v4

        - name: Configure system
          run: |
              sudo apt install ninja-build cmake gdal-bin libgdal-dev libboost-dev libboost-test-dev libncurses-dev libxerces-c-dev mesa-common-dev libglu1-mesa-dev python3 libpython3-dev python3-numpy pybind11-dev
              # Only required for documentation:
              sudo apt install python3-sphinx doxygen python3-matplotlib graphviz

        - name: Configure PCRaster
          shell: bash -l {0}
          run: |
              mkdir build
              cmake \
                  -S . \
                  -B build \
                  -G"Ninja Multi-Config" \
                  -D CMAKE_CONFIGURATION_TYPES="Release;Debug" \
                  -D CMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
                  -D CMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
                  -D PCRASTER_BUILD_TEST=ON \
                  -D PCRASTER_BUILD_DOCUMENTATION=ON \
                  -D PCRASTER_WITH_FLAGS_IPO=OFF \
                  -D Python3_EXECUTABLE:FILEPATH=/usr/bin/python3 \
                  -D CMAKE_INSTALL_PREFIX=package

        - name: Build debug
          shell: bash
          run: |
              cmake --build build --config Debug --target all

        - name: Build release
          shell: bash
          run: |
              cmake --build build --config Release --target all

        - name: Install PCRaster
          shell: bash
          run: |
              cmake --install build --config Release

        - name: Create source package
          shell: bash
          run: |
              cmake --build build --config Release --target package_source

        - name: Test debug
          env:
              LOGNAME: pcrtester
          shell: bash
          run: |
              ctest --test-dir build --output-on-failure --build-config Debug

        - name: Test release
          env:
              LOGNAME: pcrtester
          shell: bash
          run: |
              ctest --test-dir build --output-on-failure --build-config Release
